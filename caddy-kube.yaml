# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.4.0

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-02-04T15:04:42Z"
  labels:
    app: caddy-pod
  name: caddy-pod
spec:
  ports:
  - name: "80"
    nodePort: 32761
    port: 80
    targetPort: 80
  - name: "443"
    nodePort: 31845
    port: 443
    targetPort: 443
  selector:
    app: caddy-pod
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    bind-mount-options: /home/jordan/Projects/quartz64-caddy-config/Caddyfile:Z
    io.containers.autoupdate/caddy: registry
  creationTimestamp: "2023-02-04T15:04:42Z"
  labels:
    app: caddy-pod
  name: caddy-pod
spec:
  containers:
  - image: quay.io/jwillikers/caddy-cloudflare:latest
    name: caddy
    securityContext:
      seLinuxOptions:
        type: spc_t
    ports:
    - containerPort: 80
      hostPort: 80
    - containerPort: 443
      hostPort: 443
    volumeMounts:
    - mountPath: /etc/caddy/Caddyfile
      name: home-jordan-Projects-quartz64-caddy-config-Caddyfile-host-0
    - mountPath: /config/
      name: caddy-config-pvc
    - mountPath: /data/
      name: caddy-data-pvc
  volumes:
  - hostPath:
      path: /home/jordan/Projects/quartz64-caddy-config/Caddyfile
      type: File
    name: home-jordan-Projects-quartz64-caddy-config-Caddyfile-host-0
  - name: caddy-config-pvc
    persistentVolumeClaim:
      claimName: caddy-config
  - name: caddy-data-pvc
    persistentVolumeClaim:
      claimName: caddy-data
