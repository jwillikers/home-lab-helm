# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.4.0

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-02-04T15:04:42Z"
  labels:
    app: caddy-pod
  name: caddy-pod
spec:
  ports:
  - name: "80"
    nodePort: 32761
    port: 80
    targetPort: 80
  - name: "443"
    nodePort: 31845
    port: 443
    targetPort: 443
  selector:
    app: caddy-pod
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.containers.autoupdate/caddy: registry
  creationTimestamp: "2023-02-04T15:04:42Z"
  labels:
    app: caddy-pod
  name: caddy-pod
spec:
  containers:
  - image: quay.io/jwillikers/caddy-ovh:latest
    name: caddy
    securityContext:
      runAsGroup: 0
      runAsUser: 0
      sysctls:
      - name: net.ipv4.ip_unprivileged_port_start
        value: "80"
      # https://github.com/quic-go/quic-go/wiki/UDP-Buffer-Sizes
      - name: net.core.rmem_max
        value: "2500000"
      - name: net.core.wmem_max
        value: "2500000"
      seLinuxOptions:
        type: spc_t
    env:
    - name: OVH_ENDPOINT
      value: ovh-eu
    - name: OVH_APPLICATION_KEY
      valueFrom:
        secretKeyRef:
          name: caddy-secrets
          key: ovh_application_key
          optional: false
    - name: OVH_APPLICATION_SECRET
      valueFrom:
        secretKeyRef:
          name: caddy-secrets
          key: ovh_application_secret
          optional: false
    - name: OVH_CONSUMER_KEY
      valueFrom:
        secretKeyRef:
          name: caddy-secrets
          key: ovh_consumer_key
          optional: false
    ports:
    - containerPort: 80
      hostPort: 80
    - containerPort: 443
      hostPort: 443
    volumeMounts:
    - mountPath: /etc/caddy/
      name: caddy-config-host
    - mountPath: /config/
      name: caddy-config-pvc
    - mountPath: /data/
      name: caddy-data-pvc
  volumes:
  - hostPath:
      path: /home/core/Projects/caddy-config
      type: Directory
    name: caddy-config-host
  - name: caddy-config-pvc
    persistentVolumeClaim:
      claimName: caddy-config
  - name: caddy-data-pvc
    persistentVolumeClaim:
      claimName: caddy-data
    