# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.6.0

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-08-13T17:48:30Z"
  labels:
    app: icinga
  name: icinga
spec:
  ports:
  - name: "5665"
    nodePort: 32739
    port: 5665
    targetPort: 5665
  selector:
    app: icinga
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    bind-mount-options: /home/core/Projects/icinga-config/etc:Z
    io.containers.autoupdate/icinga: registry
    io.podman.annotations.ulimit: nproc=250000:500000
  creationTimestamp: "2023-08-13T17:48:30Z"
  labels:
    app: icinga
  name: icinga
spec:
  containers:
  - args:
    - icinga2
    - daemon
    env:
    - name: ICINGA_MASTER
      value: "1"
    - name: HOSTNAME
      value: icinga.jwillikers.io
    - name: TZ
      value: US/Central
    image: quay.io/jwillikers/icinga-snmp:latest
    name: icinga
    ports:
      - containerPort: 5665
        hostPort: 5665
    securityContext:
      capabilities:
        add: ["NET_RAW"]
      seLinuxOptions:
        type: spc_t
    volumeMounts:
    - mountPath: /data
      name: icinga-data-pvc
    - mountPath: /data/etc/icinga2
      name: icinga-config-host
      readOnly: True
  hostname: icinga.jwillikers.io
  enableServiceLinks: false
  # todo Disable hostUsers and add UserNS=keep-id to icinga.kube when possible.
  # hostUsers: false
  volumes:
  - name: icinga-data-pvc
    persistentVolumeClaim:
      claimName: icinga-data
  - hostPath:
      path: /home/core/Projects/icinga-config/etc/icinga2
      type: Directory
    name: icinga-config-host
