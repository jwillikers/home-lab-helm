# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.4.2
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-04-21T17:53:56Z"
  labels:
    app: vaultwarden
  name: vaultwarden
spec:
  selector:
    app: vaultwarden
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.containers.autoupdate/vaultwarden-postgresql: registry
    io.containers.autoupdate/vaultwarden-server: registry
  creationTimestamp: "2023-04-21T17:53:56Z"
  labels:
    app: vaultwarden
  name: vaultwarden
spec:
  containers:
    - args:
        - postgres
      env:
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_USER
          value: vaultwarden
        - name: POSTGRES_DB
          value: vaultwarden
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: vaultwarden_postgresql_password
              optional: false
      image: docker.io/library/postgres:latest
      name: postgresql
      resources: {}
      securityContext:
        runAsGroup: 818
        runAsUser: 818
        seLinuxOptions:
          type: spc_t
      volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: vaultwarden-postgresql-data-host
    - args:
        - /start.sh
      env:
        - name: SMTP_FROM
          value: vaultwarden@jwillikers.com
        - name: SMTP_SECURITY
          value: force_tls
        - name: SMTP_AUTH_MECHANISM
          value: Plain
        - name: SMTP_USERNAME
          value: vaultwarden@jwillikers.com
        - name: ROCKET_PORT
          value: "8080"
        - name: SMTP_PORT
          value: "465"
        - name: DOMAIN
          value: https://vault.jwillikers.io
        - name: SMTP_HOST
          value: ssl0.ovh.net
        - name: WEBSOCKET_ENABLED
          value: "true"
        - name: ADMIN_TOKEN
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: vaultwarden_admin_token
              optional: false
        - name: DATABASE_URL
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: vaultwarden_postgresql_url
              optional: false
        - name: SMTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vaultwarden-secrets
              key: vaultwarden_smtp_password
              optional: false
      image: quay.io/vaultwarden/server:latest
      name: vaultwarden
      resources: {}
      securityContext:
        runAsGroup: 818
        runAsUser: 818
        seLinuxOptions:
          type: spc_t
      volumeMounts:
        - mountPath: /data
          name: vaultwarden-server-data-host
  enableServiceLinks: false
  hostname: vaultwarden
  hostUsers: false
  volumes:
    - hostPath:
        path: /home/core/container-volumes/vaultwarden-postgresql-data
        type: Directory
      name: vaultwarden-postgresql-data-host
    - hostPath:
        path: /home/core/container-volumes/vaultwarden-server-data
        type: Directory
      name: vaultwarden-server-data-host
status: {}
