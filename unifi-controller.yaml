# Save the output of this file and use kubectl create -f to import
# it into Kubernetes.
#
# Created with podman-4.3.1

# NOTE: If you generated this yaml from an unprivileged and rootless podman container on an SELinux
# enabled system, check the podman generate kube man page for steps to follow to ensure that your pod/container
# has the right permissions to access the volumes added.
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: "2023-02-09T01:09:39Z"
  labels:
    app: unifi-controller-pod
  name: unifi-controller-pod
spec:
  ports:
  - name: "6789"
    nodePort: 30485
    port: 6789
    targetPort: 6789
  - name: "3478"
    nodePort: 30999
    port: 3478
    protocol: UDP
    targetPort: 3478
  - name: "5514"
    nodePort: 30220
    port: 5514
    protocol: UDP
    targetPort: 5514
  - name: "10001"
    nodePort: 32494
    port: 10001
    protocol: UDP
    targetPort: 10001
  selector:
    app: unifi-controller-pod
  type: NodePort
---
apiVersion: v1
kind: Pod
metadata:
  annotations:
    io.containers.autoupdate/unifi-controller: registry
    io.kubernetes.cri-o.TTY/unifi-controller: "false"
    io.podman.annotations.autoremove/unifi-controller: "TRUE"
    io.podman.annotations.cid-file/unifi-controller: /run/user/1000/container-unifi-controller.service.ctr-id
    io.podman.annotations.init/unifi-controller: "TRUE"
    io.podman.annotations.privileged/unifi-controller: "FALSE"
    io.podman.annotations.publish-all/unifi-controller: "FALSE"
  creationTimestamp: "2023-02-09T01:09:39Z"
  labels:
    app: unifi-controller-pod
  name: unifi-controller-pod
spec:
  automountServiceAccountToken: false
  containers:
  - args:
    - unifi
    env:
    - name: LOTSOFDEVICES
      value: "true"
    image: docker.io/jacobalberty/unifi:latest
    name: unifi-controller
    ports:
    - containerPort: 6789
      hostPort: 6789
    - containerPort: 3478
      hostPort: 3478
      protocol: UDP
    - containerPort: 5514
      hostPort: 5514
      protocol: UDP
    - containerPort: 10001
      hostPort: 10001
      protocol: UDP
    securityContext:
      capabilities: {}
      seLinuxOptions:
        type: spc_t
    volumeMounts:
    - mountPath: /unifi/data/backup
      name: home-jordan-container-volumes-unifi-controller-backups-host-0
    - mountPath: /unifi/data
      name: home-jordan-container-volumes-unifi-controller-data-host-1
    - mountPath: /unifi/log
      name: home-jordan-container-volumes-unifi-controller-log-host-2
    - mountPath: /unifi/init.d
      name: unifi-controller-init-pvc
    - mountPath: /var/run
      name: unifi-controller-run-pvc
    - mountPath: /unifi
      name: unifi-controller-dir-pvc
    - mountPath: /unifi/run
      name: 124caff6809a956e731f3e62fb4f13cc710a2a00c1570127fede3aaae686313d-pvc
    - mountPath: /unifi/cert
      name: unifi-controller-cert-pvc
  enableServiceLinks: false
  volumes:
  - hostPath:
      path: /home/jordan/container-volumes/unifi-controller-backups
      type: Directory
    name: home-jordan-container-volumes-unifi-controller-backups-host-0
  - hostPath:
      path: /home/jordan/container-volumes/unifi-controller-data
      type: Directory
    name: home-jordan-container-volumes-unifi-controller-data-host-1
  - hostPath:
      path: /home/jordan/container-volumes/unifi-controller-log
      type: Directory
    name: home-jordan-container-volumes-unifi-controller-log-host-2
  - name: unifi-controller-init-pvc
    persistentVolumeClaim:
      claimName: unifi-controller-init
  - name: unifi-controller-run-pvc
    persistentVolumeClaim:
      claimName: unifi-controller-run
  - name: unifi-controller-dir-pvc
    persistentVolumeClaim:
      claimName: unifi-controller-dir
  - name: 124caff6809a956e731f3e62fb4f13cc710a2a00c1570127fede3aaae686313d-pvc
    persistentVolumeClaim:
      claimName: 124caff6809a956e731f3e62fb4f13cc710a2a00c1570127fede3aaae686313d
  - name: unifi-controller-cert-pvc
    persistentVolumeClaim:
      claimName: unifi-controller-cert
